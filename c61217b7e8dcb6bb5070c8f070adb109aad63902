{
  "comments": [
    {
      "key": {
        "uuid": "d57b778e_ce0d28a1",
        "filename": "tests/phpunit/MathPngTest.php",
        "patchSetId": 2
      },
      "lineNbr": 11,
      "author": {
        "id": 1453
      },
      "writtenOn": "2018-05-29T11:21:17Z",
      "side": 1,
      "message": "With the @covers above this additional one is not really needed, but doesn\u0027t hurt.",
      "range": {
        "startLine": 11,
        "startChar": 5,
        "endLine": 11,
        "endChar": 33
      },
      "revId": "c61217b7e8dcb6bb5070c8f070adb109aad63902",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8a45c67c_68a3542e",
        "filename": "tests/phpunit/MathPngTest.php",
        "patchSetId": 2
      },
      "lineNbr": 11,
      "author": {
        "id": 183
      },
      "writtenOn": "2018-05-29T12:26:34Z",
      "side": 1,
      "message": "Thank you. I saw 3 counters on the unit test page. Lines methods and classes. I added this annotation with the intention to increment the methods counter... I don\u0027t remember if that was effective.",
      "parentUuid": "d57b778e_ce0d28a1",
      "range": {
        "startLine": 11,
        "startChar": 5,
        "endLine": 11,
        "endChar": 33
      },
      "revId": "c61217b7e8dcb6bb5070c8f070adb109aad63902",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "56bc4680_92b7e3cf",
        "filename": "tests/phpunit/MathPngTest.php",
        "patchSetId": 2
      },
      "lineNbr": 11,
      "author": {
        "id": 1453
      },
      "writtenOn": "2018-05-29T15:14:30Z",
      "side": 1,
      "message": "Function-level @covers are meant to *reduce* accidental coverage. With this, the coverage this particular test creates will only be counted for the functions named in the @covers tags.\n\nWithout function-level @covers, the class-level @covers above will kick in and count all code in the class that is executed while this test runs.\n\nThe counters for methods and classes you see in the end are calculated from the line coverage, but not directly influenced by @covers tags.\n\nHere in this particular case it does not make a difference.",
      "parentUuid": "8a45c67c_68a3542e",
      "range": {
        "startLine": 11,
        "startChar": 5,
        "endLine": 11,
        "endChar": 33
      },
      "revId": "c61217b7e8dcb6bb5070c8f070adb109aad63902",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9cd72adb_31c369af",
        "filename": "tests/phpunit/MathPngTest.php",
        "patchSetId": 2
      },
      "lineNbr": 11,
      "author": {
        "id": 183
      },
      "writtenOn": "2018-05-29T16:19:56Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "56bc4680_92b7e3cf",
      "range": {
        "startLine": 11,
        "startChar": 5,
        "endLine": 11,
        "endChar": 33
      },
      "revId": "c61217b7e8dcb6bb5070c8f070adb109aad63902",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7aaf0b54_53f8367b",
        "filename": "tests/phpunit/MathPngTest.php",
        "patchSetId": 2
      },
      "lineNbr": 21,
      "author": {
        "id": 1453
      },
      "writtenOn": "2018-05-29T11:21:17Z",
      "side": 1,
      "message": "Hm. I think this here is more an implementation detail. Lets see: What is the MathPng class actually supposed to do? Or to be more precise: What is the difference between using MathPng and using MathMathML directly? I think the only relevant assertion is if MathPng::getHtmlOutput returns a PNG image. It should not matter how it achieves this.\n\nI suggest to plan for a refactoring like this:\n* First, introduce one or a few interfaces in addition to MathRenderer, which currently is an abstract base class. Let each interface fulfill one very specific purpose.\n* Let all code use one of these interfaces, instead of the abstract MathRenderer. Basically: make sure no code expects a MathRenderer subclass any more.\n* If this is done, you can refactor the MathPng to be a facade, instead of a subclass that overrides certain aspects of it\u0027s baseclass (and by that violates LSP).\n\nA dependency on a getFallbackImage call is not relevant at any point.",
      "range": {
        "startLine": 21,
        "startChar": 48,
        "endLine": 21,
        "endChar": 64
      },
      "revId": "c61217b7e8dcb6bb5070c8f070adb109aad63902",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "391f2389_f5475ce2",
        "filename": "tests/phpunit/MathPngTest.php",
        "patchSetId": 2
      },
      "lineNbr": 21,
      "author": {
        "id": 183
      },
      "writtenOn": "2018-05-29T12:26:34Z",
      "side": 1,
      "message": "I like your proposal. However, I have the feeling that it would be better to create a ticket for that.\n\nWould you agree?\nAnd what does LSP mean? I guess nothing from https://en.wikipedia.org/wiki/LSP",
      "parentUuid": "7aaf0b54_53f8367b",
      "range": {
        "startLine": 21,
        "startChar": 48,
        "endLine": 21,
        "endChar": 64
      },
      "revId": "c61217b7e8dcb6bb5070c8f070adb109aad63902",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5b73803b_9b62ff69",
        "filename": "tests/phpunit/MathPngTest.php",
        "patchSetId": 2
      },
      "lineNbr": 21,
      "author": {
        "id": 1453
      },
      "writtenOn": "2018-05-29T15:14:30Z",
      "side": 1,
      "message": "I meant https://en.wikipedia.org/wiki/Liskov_substitution_principle, but I think I was wrong and it does not apply here.\n\nSure, most of this was not meant as an edit request for this patch, but possible later steps. Let me try to rephrase my actual edit request: Can you please replace this \"expects once\" with an assertion that checks the actual output of the getHtmlOutput() call?",
      "parentUuid": "391f2389_f5475ce2",
      "range": {
        "startLine": 21,
        "startChar": 48,
        "endLine": 21,
        "endChar": 64
      },
      "revId": "c61217b7e8dcb6bb5070c8f070adb109aad63902",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "770ccc3c_d6e52675",
        "filename": "tests/phpunit/MathPngTest.php",
        "patchSetId": 2
      },
      "lineNbr": 21,
      "author": {
        "id": 183
      },
      "writtenOn": "2018-05-29T16:19:56Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "5b73803b_9b62ff69",
      "range": {
        "startLine": 21,
        "startChar": 48,
        "endLine": 21,
        "endChar": 64
      },
      "revId": "c61217b7e8dcb6bb5070c8f070adb109aad63902",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    }
  ]
}