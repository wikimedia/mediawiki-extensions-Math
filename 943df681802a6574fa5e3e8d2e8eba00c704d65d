{
  "comments": [
    {
      "key": {
        "uuid": "Dw-EKxtI",
        "filename": "Math.i18n.php",
        "patchSetId": 16
      },
      "lineNbr": 48,
      "author": {
        "id": 519
      },
      "writtenOn": "2013-05-14T06:32:45Z",
      "side": 1,
      "message": "Line up *.",
      "revId": "943df681802a6574fa5e3e8d2e8eba00c704d65d",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "Dw1EQ0gA",
        "filename": "Math.i18n.php",
        "patchSetId": 16
      },
      "lineNbr": 77,
      "author": {
        "id": 519
      },
      "writtenOn": "2013-05-14T06:32:45Z",
      "side": 1,
      "message": "\"label for LaTeXML radio button\".  Kind of obvious, but this way they don\u0027t have to read the keys.\n\nIt would be great if you also changed the old ones (mw_math_source and mw_math_mathjax)",
      "revId": "943df681802a6574fa5e3e8d2e8eba00c704d65d",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "Dw9EE4sQ",
        "filename": "Math.php",
        "patchSetId": 16
      },
      "lineNbr": 41,
      "author": {
        "id": 519
      },
      "writtenOn": "2013-05-14T06:32:45Z",
      "side": 1,
      "message": "Core is now 1.22 (new in 1.22), though this doesn\u0027t mean much if no one does a release branch for Math.",
      "revId": "943df681802a6574fa5e3e8d2e8eba00c704d65d",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "Dw7EBXrQ",
        "filename": "Math.php",
        "patchSetId": 16
      },
      "lineNbr": 109,
      "author": {
        "id": 519
      },
      "writtenOn": "2013-05-14T06:32:45Z",
      "side": 1,
      "message": "\"don\u0027t like them\" is probably not the best phrasing.  How about:\n\n\"If you want or need to run your own server, follow these installation instructions and override $wgLaTeXMLUrl:\"\n\nAlso note that it can be an array (or remove that code).\n\nYou should also note the copyright status of the web service\u0027s code (public domain, if https://svn.mathweb.org/repos/LaTeXML/branches/arXMLiv/LICENSE applies) for people who choose to install their own instance of the web service.",
      "revId": "943df681802a6574fa5e3e8d2e8eba00c704d65d",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "Dw7Hy-pY",
        "filename": "Math.php",
        "patchSetId": 16
      },
      "lineNbr": 115,
      "author": {
        "id": 519
      },
      "writtenOn": "2013-05-14T06:32:45Z",
      "side": 1,
      "message": "Remove part about MathJax.  This is not true yet, right?",
      "revId": "943df681802a6574fa5e3e8d2e8eba00c704d65d",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "Dw5H7enY",
        "filename": "Math.php",
        "patchSetId": 16
      },
      "lineNbr": 118,
      "author": {
        "id": 519
      },
      "writtenOn": "2013-05-14T06:32:45Z",
      "side": 1,
      "message": "Set it to false to start out with.",
      "revId": "943df681802a6574fa5e3e8d2e8eba00c704d65d",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "Dw-Ez5qg",
        "filename": "Math.php",
        "patchSetId": 16
      },
      "lineNbr": 120,
      "author": {
        "id": 519
      },
      "writtenOn": "2013-05-14T06:32:45Z",
      "side": 1,
      "message": "\"an equation, in seconds\"",
      "revId": "943df681802a6574fa5e3e8d2e8eba00c704d65d",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "DwxEvakE",
        "filename": "Math.php",
        "patchSetId": 16
      },
      "lineNbr": 122,
      "author": {
        "id": 519
      },
      "writtenOn": "2013-05-14T06:32:45Z",
      "side": 1,
      "message": "Misspelled (wgLaTeXMLTimeout) and spacing.\n\nThis is a pretty long timeout, by the way.  It\u0027s not a big deal for WMF, since they could override the wg variable for their cluster, but 60-120 is more reasonable in general (third party users too) IMHO (there may be multiple equations, but four minutes is a lot for a single one).",
      "revId": "943df681802a6574fa5e3e8d2e8eba00c704d65d",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "Dw9HDQjo",
        "filename": "MathLaTeXML.php",
        "patchSetId": 16
      },
      "lineNbr": 15,
      "author": {
        "id": 519
      },
      "writtenOn": "2013-05-14T06:32:45Z",
      "side": 1,
      "message": "The spelling is \"daemon\"; see also below.",
      "revId": "943df681802a6574fa5e3e8d2e8eba00c704d65d",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "Dw3HGtk0",
        "filename": "MathLaTeXML.php",
        "patchSetId": 16
      },
      "lineNbr": 20,
      "author": {
        "id": 519
      },
      "writtenOn": "2013-05-14T06:32:45Z",
      "side": 1,
      "message": "\"Gets the settings\"",
      "revId": "943df681802a6574fa5e3e8d2e8eba00c704d65d",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "Dw7HAPi8",
        "filename": "MathLaTeXML.php",
        "patchSetId": 16
      },
      "lineNbr": 50,
      "author": {
        "id": 519
      },
      "writtenOn": "2013-05-14T06:32:45Z",
      "side": 1,
      "message": "settings",
      "revId": "943df681802a6574fa5e3e8d2e8eba00c704d65d",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "Dw3HP1lc",
        "filename": "MathLaTeXML.php",
        "patchSetId": 16
      },
      "lineNbr": 85,
      "author": {
        "id": 519
      },
      "writtenOn": "2013-05-14T06:32:45Z",
      "side": 1,
      "message": "Is this necessary?  I\u0027m just wondering if checking the XML on these reads could cause performance problems.\n\nPresumably, it should be valid if it makes it to the db (unless there was previously a bug, or the schema changes).  Perhaps these cases could be handled through job queue cleanup jobs, or purging the database..",
      "revId": "943df681802a6574fa5e3e8d2e8eba00c704d65d",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "Dw5HSWv4",
        "filename": "MathLaTeXML.php",
        "patchSetId": 16
      },
      "lineNbr": 89,
      "author": {
        "id": 519
      },
      "writtenOn": "2013-05-14T06:32:45Z",
      "side": 1,
      "message": "Malformatted",
      "revId": "943df681802a6574fa5e3e8d2e8eba00c704d65d",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "Dw9Hc4hE",
        "filename": "MathLaTeXML.php",
        "patchSetId": 16
      },
      "lineNbr": 119,
      "author": {
        "id": 519
      },
      "writtenOn": "2013-05-14T06:32:45Z",
      "side": 1,
      "message": "Why are you checking the timeout here?  Shouldn\u0027t the Http code you\u0027re calling handle that?",
      "revId": "943df681802a6574fa5e3e8d2e8eba00c704d65d",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "Dw7HZXiE",
        "filename": "MathLaTeXML.php",
        "patchSetId": 16
      },
      "lineNbr": 131,
      "author": {
        "id": 519
      },
      "writtenOn": "2013-05-14T06:32:45Z",
      "side": 1,
      "message": "As noted, latexml_invalidresponse or failedresponse seems more accurate.",
      "revId": "943df681802a6574fa5e3e8d2e8eba00c704d65d",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "DwxEHaoY",
        "filename": "MathLaTeXML.php",
        "patchSetId": 16
      },
      "lineNbr": 140,
      "author": {
        "id": 519
      },
      "writtenOn": "2013-05-14T06:32:45Z",
      "side": 1,
      "message": "Always specify (private, protected, or public) explicitly for new code: https://www.mediawiki.org/wiki/Manual:Coding_conventions/PHP#Classes",
      "revId": "943df681802a6574fa5e3e8d2e8eba00c704d65d",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "Dw-EL5o0",
        "filename": "MathLaTeXML.php",
        "patchSetId": 16
      },
      "lineNbr": 148,
      "author": {
        "id": 519
      },
      "writtenOn": "2013-05-14T06:32:45Z",
      "side": 1,
      "message": "daemon",
      "revId": "943df681802a6574fa5e3e8d2e8eba00c704d65d",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "Dw1EB8m0",
        "filename": "MathLaTeXML.php",
        "patchSetId": 16
      },
      "lineNbr": 165,
      "author": {
        "id": 519
      },
      "writtenOn": "2013-05-14T06:32:45Z",
      "side": 1,
      "message": "Maybe add a comment \"Does the actual web request to convert TeX to MathML\"",
      "revId": "943df681802a6574fa5e3e8d2e8eba00c704d65d",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "DwzEG7oY",
        "filename": "MathLaTeXML.php",
        "patchSetId": 16
      },
      "lineNbr": 240,
      "author": {
        "id": 519
      },
      "writtenOn": "2013-05-14T06:32:45Z",
      "side": 1,
      "message": "Embeds",
      "revId": "943df681802a6574fa5e3e8d2e8eba00c704d65d",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "DwxHQCio",
        "filename": "MathRenderer.php",
        "patchSetId": 16
      },
      "lineNbr": 43,
      "author": {
        "id": 519
      },
      "writtenOn": "2013-05-14T06:32:45Z",
      "side": 1,
      "message": "Use explicit terms (\"private\", \"protected\", \"public\") for new fields.  var means \"public\" in PHP.",
      "revId": "943df681802a6574fa5e3e8d2e8eba00c704d65d",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "Dw-HUhh8",
        "filename": "MathRenderer.php",
        "patchSetId": 16
      },
      "lineNbr": 370,
      "author": {
        "id": 519
      },
      "writtenOn": "2013-05-14T06:32:45Z",
      "side": 1,
      "message": "I\u0027m not sure about this, particularly the URL parameter being accessed directly.  Can isPurge, etc. be separated out so this change focuses on LaTeXML?",
      "revId": "943df681802a6574fa5e3e8d2e8eba00c704d65d",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "Dw1Hakkk",
        "filename": "tests/MathLaTeXMLTest.php",
        "patchSetId": 16
      },
      "lineNbr": 15,
      "author": {
        "id": 519
      },
      "writtenOn": "2013-05-14T06:32:45Z",
      "side": 1,
      "message": "It\u0027s a little annoying because of the static methods.\n\nOne idea, pass in a $httpRequestClass variable to getRenderer, defaulted to \u0027MWHttpRequest\u0027.  Then call $httpRequestClass::factory() to get the actual request objects (it takes a url and options).\n\nFor the test, pass in a custom test class that extends MWHttpRequest and has a suitable factory method.\n\nIf you do this, you should make a note that $httpRequestClass is for testability.\n\nIt will allow you to not use the real domain names below, though, which would be good.",
      "revId": "943df681802a6574fa5e3e8d2e8eba00c704d65d",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "Dw5HkGhI",
        "filename": "tests/MathLaTeXMLTest.php",
        "patchSetId": 16
      },
      "lineNbr": 18,
      "author": {
        "id": 519
      },
      "writtenOn": "2013-05-14T06:32:45Z",
      "side": 1,
      "message": "Maybe $requestReturn?",
      "revId": "943df681802a6574fa5e3e8d2e8eba00c704d65d",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "Dw3Hhlv8",
        "filename": "tests/MathLaTeXMLTest.php",
        "patchSetId": 16
      },
      "lineNbr": 20,
      "author": {
        "id": 519
      },
      "writtenOn": "2013-05-14T06:32:45Z",
      "side": 1,
      "message": "Make clear what you are testing.  How about something like \"requestReturn is false for \u0027no response\u0027 case\".\n\nBut can\u0027t no_response also occur for an unsuccessful response (e.g. I think the Google example is HTTP 405).  I think it should be renamed.\n\nRename the other \"bad call\"s below, too, please.",
      "revId": "943df681802a6574fa5e3e8d2e8eba00c704d65d",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "Dw5HJul4",
        "filename": "tests/MathLaTeXMLTest.php",
        "patchSetId": 16
      },
      "lineNbr": 27,
      "author": {
        "id": 519
      },
      "writtenOn": "2013-05-14T06:32:45Z",
      "side": 1,
      "message": "successful",
      "revId": "943df681802a6574fa5e3e8d2e8eba00c704d65d",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "Dw9Huou0",
        "filename": "tests/MathLaTeXMLTest.php",
        "patchSetId": 16
      },
      "lineNbr": 31,
      "author": {
        "id": 519
      },
      "writtenOn": "2013-05-14T06:32:45Z",
      "side": 1,
      "message": "Use $this-\u003esetMwGlobals for test code.  E.g.\n\n$this-\u003esetMwGlobals( \u0027wgLaTeXMLTimeout\u0027, 1);\n\nTechnically, you only need to do it one or more more times per test, but I think it\u0027s simpler to do it every time.\n\nThis ensures it discards the change after the test.",
      "revId": "943df681802a6574fa5e3e8d2e8eba00c704d65d",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    }
  ]
}